# coding=utf-8
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: bfcta.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import bfgateway_pb2 as bfgateway__pb2
from google.protobuf import any_pb2 as google_dot_protobuf_dot_any__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='bfcta.proto',
  package='bfcta',
  syntax='proto3',
  serialized_pb=_b('\n\x0b\x62\x66\x63ta.proto\x12\x05\x62\x66\x63ta\x1a\x0f\x62\x66gateway.proto\x1a\x19google/protobuf/any.proto2\xa7\x02\n\x0c\x42\x66\x43taService\x12\x44\n\x0b\x43onnectPush\x12\x1b.bfgateway.BfConnectPushReq\x1a\x14.google.protobuf.Any\"\x00\x30\x01\x12\x38\n\x0e\x44isconnectPush\x12\x11.bfgateway.BfVoid\x1a\x11.bfgateway.BfVoid\"\x00\x12\x36\n\x04Ping\x12\x15.bfgateway.BfPingData\x1a\x15.bfgateway.BfPingData\"\x00\x12/\n\x05Start\x12\x11.bfgateway.BfVoid\x1a\x11.bfgateway.BfVoid\"\x00\x12.\n\x04Stop\x12\x11.bfgateway.BfVoid\x1a\x11.bfgateway.BfVoid\"\x00\x42%Z#github.com/sunwangme/bfgo/api/bfctab\x06proto3')
  ,
  dependencies=[bfgateway__pb2.DESCRIPTOR,google_dot_protobuf_dot_any__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)





DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('Z#github.com/sunwangme/bfgo/api/bfcta'))
import grpc
from grpc.beta import implementations as beta_implementations
from grpc.beta import interfaces as beta_interfaces
from grpc.framework.common import cardinality
from grpc.framework.interfaces.face import utilities as face_utilities


class BfCtaServiceStub(object):
  """============================


  Cta服务，给assist用=

  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.ConnectPush = channel.unary_stream(
        '/bfcta.BfCtaService/ConnectPush',
        request_serializer=bfgateway__pb2.BfConnectPushReq.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_any__pb2.Any.FromString,
        )
    self.DisconnectPush = channel.unary_unary(
        '/bfcta.BfCtaService/DisconnectPush',
        request_serializer=bfgateway__pb2.BfVoid.SerializeToString,
        response_deserializer=bfgateway__pb2.BfVoid.FromString,
        )
    self.Ping = channel.unary_unary(
        '/bfcta.BfCtaService/Ping',
        request_serializer=bfgateway__pb2.BfPingData.SerializeToString,
        response_deserializer=bfgateway__pb2.BfPingData.FromString,
        )
    self.Start = channel.unary_unary(
        '/bfcta.BfCtaService/Start',
        request_serializer=bfgateway__pb2.BfVoid.SerializeToString,
        response_deserializer=bfgateway__pb2.BfVoid.FromString,
        )
    self.Stop = channel.unary_unary(
        '/bfcta.BfCtaService/Stop',
        request_serializer=bfgateway__pb2.BfVoid.SerializeToString,
        response_deserializer=bfgateway__pb2.BfVoid.FromString,
        )


class BfCtaServiceServicer(object):
  """============================


  Cta服务，给assist用=

  """

  def ConnectPush(self, request, context):
    """请求push
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DisconnectPush(self, request, context):
    """断开push
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Ping(self, request, context):
    """活跃检测=
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Start(self, request, context):
    """开始cta
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Stop(self, request, context):
    """停止cta
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_BfCtaServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'ConnectPush': grpc.unary_stream_rpc_method_handler(
          servicer.ConnectPush,
          request_deserializer=bfgateway__pb2.BfConnectPushReq.FromString,
          response_serializer=google_dot_protobuf_dot_any__pb2.Any.SerializeToString,
      ),
      'DisconnectPush': grpc.unary_unary_rpc_method_handler(
          servicer.DisconnectPush,
          request_deserializer=bfgateway__pb2.BfVoid.FromString,
          response_serializer=bfgateway__pb2.BfVoid.SerializeToString,
      ),
      'Ping': grpc.unary_unary_rpc_method_handler(
          servicer.Ping,
          request_deserializer=bfgateway__pb2.BfPingData.FromString,
          response_serializer=bfgateway__pb2.BfPingData.SerializeToString,
      ),
      'Start': grpc.unary_unary_rpc_method_handler(
          servicer.Start,
          request_deserializer=bfgateway__pb2.BfVoid.FromString,
          response_serializer=bfgateway__pb2.BfVoid.SerializeToString,
      ),
      'Stop': grpc.unary_unary_rpc_method_handler(
          servicer.Stop,
          request_deserializer=bfgateway__pb2.BfVoid.FromString,
          response_serializer=bfgateway__pb2.BfVoid.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'bfcta.BfCtaService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class BetaBfCtaServiceServicer(object):
  """============================


  Cta服务，给assist用=

  """
  def ConnectPush(self, request, context):
    """请求push
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def DisconnectPush(self, request, context):
    """断开push
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def Ping(self, request, context):
    """活跃检测=
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def Start(self, request, context):
    """开始cta
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def Stop(self, request, context):
    """停止cta
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


class BetaBfCtaServiceStub(object):
  """============================


  Cta服务，给assist用=

  """
  def ConnectPush(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """请求push
    """
    raise NotImplementedError()
  def DisconnectPush(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """断开push
    """
    raise NotImplementedError()
  DisconnectPush.future = None
  def Ping(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """活跃检测=
    """
    raise NotImplementedError()
  Ping.future = None
  def Start(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """开始cta
    """
    raise NotImplementedError()
  Start.future = None
  def Stop(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """停止cta
    """
    raise NotImplementedError()
  Stop.future = None


def beta_create_BfCtaService_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
  request_deserializers = {
    ('bfcta.BfCtaService', 'ConnectPush'): bfgateway__pb2.BfConnectPushReq.FromString,
    ('bfcta.BfCtaService', 'DisconnectPush'): bfgateway__pb2.BfVoid.FromString,
    ('bfcta.BfCtaService', 'Ping'): bfgateway__pb2.BfPingData.FromString,
    ('bfcta.BfCtaService', 'Start'): bfgateway__pb2.BfVoid.FromString,
    ('bfcta.BfCtaService', 'Stop'): bfgateway__pb2.BfVoid.FromString,
  }
  response_serializers = {
    ('bfcta.BfCtaService', 'ConnectPush'): google_dot_protobuf_dot_any__pb2.Any.SerializeToString,
    ('bfcta.BfCtaService', 'DisconnectPush'): bfgateway__pb2.BfVoid.SerializeToString,
    ('bfcta.BfCtaService', 'Ping'): bfgateway__pb2.BfPingData.SerializeToString,
    ('bfcta.BfCtaService', 'Start'): bfgateway__pb2.BfVoid.SerializeToString,
    ('bfcta.BfCtaService', 'Stop'): bfgateway__pb2.BfVoid.SerializeToString,
  }
  method_implementations = {
    ('bfcta.BfCtaService', 'ConnectPush'): face_utilities.unary_stream_inline(servicer.ConnectPush),
    ('bfcta.BfCtaService', 'DisconnectPush'): face_utilities.unary_unary_inline(servicer.DisconnectPush),
    ('bfcta.BfCtaService', 'Ping'): face_utilities.unary_unary_inline(servicer.Ping),
    ('bfcta.BfCtaService', 'Start'): face_utilities.unary_unary_inline(servicer.Start),
    ('bfcta.BfCtaService', 'Stop'): face_utilities.unary_unary_inline(servicer.Stop),
  }
  server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
  return beta_implementations.server(method_implementations, options=server_options)


def beta_create_BfCtaService_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
  request_serializers = {
    ('bfcta.BfCtaService', 'ConnectPush'): bfgateway__pb2.BfConnectPushReq.SerializeToString,
    ('bfcta.BfCtaService', 'DisconnectPush'): bfgateway__pb2.BfVoid.SerializeToString,
    ('bfcta.BfCtaService', 'Ping'): bfgateway__pb2.BfPingData.SerializeToString,
    ('bfcta.BfCtaService', 'Start'): bfgateway__pb2.BfVoid.SerializeToString,
    ('bfcta.BfCtaService', 'Stop'): bfgateway__pb2.BfVoid.SerializeToString,
  }
  response_deserializers = {
    ('bfcta.BfCtaService', 'ConnectPush'): google_dot_protobuf_dot_any__pb2.Any.FromString,
    ('bfcta.BfCtaService', 'DisconnectPush'): bfgateway__pb2.BfVoid.FromString,
    ('bfcta.BfCtaService', 'Ping'): bfgateway__pb2.BfPingData.FromString,
    ('bfcta.BfCtaService', 'Start'): bfgateway__pb2.BfVoid.FromString,
    ('bfcta.BfCtaService', 'Stop'): bfgateway__pb2.BfVoid.FromString,
  }
  cardinalities = {
    'ConnectPush': cardinality.Cardinality.UNARY_STREAM,
    'DisconnectPush': cardinality.Cardinality.UNARY_UNARY,
    'Ping': cardinality.Cardinality.UNARY_UNARY,
    'Start': cardinality.Cardinality.UNARY_UNARY,
    'Stop': cardinality.Cardinality.UNARY_UNARY,
  }
  stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
  return beta_implementations.dynamic_stub(channel, 'bfcta.BfCtaService', cardinalities, options=stub_options)
# @@protoc_insertion_point(module_scope)
